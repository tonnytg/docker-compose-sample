version: '3.8'

services:
  frontend:
    build:
      context: Frontend
      dockerfile: Dockerfile
    container_name: frontend-lideratech
    environment:
      - REACT_APP_API_URL=http://localhost:9001
    volumes:
      - ./Frontend:/app
    ports:
      - "3000:3000"
      - "9005:9005"
    networks:
      - lideratech-net
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: Backend
      dockerfile: Dockerfile
    container_name: backend-lideratech
    environment:
      - CORS_ADDRESS=*
      - DB_DRIVER=postgres
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=lideratech
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    ports:
      - "9001:9001"
      - "9002:9002"
    networks:
      - lideratech-net
    depends_on:
      - database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: postgres:latest
    container_name: database
    environment:
      - POSTGRES_DB=lideratech
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lideratech-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

networks:
  lideratech-net:
    driver: bridge
